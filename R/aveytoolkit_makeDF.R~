#' ProcessNames
#'
#' Cleans up strings to make them pretty names by removing punctuation, whitespace, and specified substrings
#'
#' @param strs vector or strings to process
#' @param stringsToRm a vector or list of strings to search for and remove from strs
#' @param rmPunct should punctuation be removed? Default is TRUE.
#' @param sep character to replace whitespace
#' @return a vector of modified strings from strs
#' @author Stefan Avey
#' @details stringsToRm are replaced by '' in the order they are given using gsub. After this, punctuation is removed if rmPunct is TRUE. Then, leading and/or trailing whitespace will be removed and the sep will be used to separate words. This function is useful when reading in other people's data and you want to change the row or column names to legal R names or just shorten the names.
#' @keywords aveytoolkit
#' @seealso \code{\link{gsub}}
#' @export
#' @examples
#' ## Test timing with a 50k-item list
#' ll <- createList(50000)
#' nms <- c("a", "b", "c")
#' 
#' system.time(makeDF(ll, nms))
#' # user  system elapsed
#' # 0.47    0.00    0.47 
#' 
## vapply() is a bit faster than sapply()
makeDF <- function(List, Names) {
  m <- t(vapply(List,
                FUN = function(X) unlist(X)[Names],
                FUN.VALUE = numeric(length(Names))))
  as.data.frame(m)
}

