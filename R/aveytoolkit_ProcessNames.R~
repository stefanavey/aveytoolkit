#' makeTransparent
#'
#' Simple function to make some colors transparent
#'
#' @param ... vector or list of colors
#' @param alpha transparency factor in range [0,1]
#' @return a vector of new colors made transparent
#' @author Ricardo Oliveros-Ramos
#' @details 
#' @keywords aveytoolkit
#' @seealso \code{\link{rgb}}, \code{\link{col2rgb}}
#' @references http://stackoverflow.com/questions/8047668/transparent-equivalent-of-given-color 
#' @export
#' @examples
#' makeTransparent("red", "blue")
#' ##[1] "#FF00007F" "#0000FF7F"
#' makeTransparent("red", "blue", alpha=0.8)
#' ## [1] "#FF0000CC" "#0000FFCC"
makeTransparent = function(..., alpha=0.5) {
  if(alpha<0 || alpha>1) stop("alpha must be between 0 and 1")
  alpha = floor(255*alpha)
  newColor = col2rgb(col=unlist(list(...)), alpha=FALSE)

  .makeTransparent = function(col, alpha) {
    rgb(red=col[1], green=col[2], blue=col[3], alpha=alpha, maxColorValue=255)
  }

  newColor = apply(newColor, 2, .makeTransparent, alpha=alpha)
  return(newColor)
}



################################################################################
### ProcessNames function takes in a character array and manipulates it to make
### nice names (e.g. for the columns of a data frame) from a description
### It returns the manipulated character array with words separated by '_'
### stringsToRm are replaced by nothing '' and rmPunct removes all punctuation
ProcessNames <- function(charArray, stringsToRm=NULL, rmPunct=TRUE, sep="_")
  {
    if(rmPunct) # remove punctuation
      charArray <- gsub("[[:punct:]]", '', charArray) 
    for (str in stringsToRm) # remove strings in stringsToRm
      charArray <- gsub(str, '', charArray)
    charArray <- gsub(' ', sep, charArray, fixed=TRUE) # change spaces to underscores
    return(charArray)
  }


